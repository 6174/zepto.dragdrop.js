{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"# zepto.dragdrop.js\r\n\r\nMicro (only 4kb) drag & drop library for Zepto with touch and mouse events.\r\n\r\n\r\n## Install\r\n\r\n    <script src=\"zepto.dragdrop.min.js\"></script>\r\n\r\n##Simple Usage\r\n\r\n###drag\r\n\r\n    dragEl.draggable();\r\n\r\n###drop\r\n\r\n    dropEl.droppable();\r\n\r\n## Callbacks\r\n\r\n###drag\r\nDrag supports three callbacks: `start`, `drag`, and `stop`. Start is fired at the start of the drag; drag during the drag; and stop when dragging stops.\r\n\r\n    dragEl.draggable({\r\n      start: function (e, dragEl) {\r\n        // your code here\r\n      },\r\n      drag: function (e, dragEl) {\r\n        // your code here\r\n      },\r\n      stop: function (e, dragEl) {\r\n        // your code here\r\n      }\r\n    });\r\n\r\n###drop\r\nAt the moment drop supports one callback `drop` which fires when draggable element is dropped into droppable element. Drop callback can be used to validate a drop action by returning `true` - successful drop or `false` - unsuccessful drop.\r\n\r\n    dragEl.draggable({\r\n      drop: function (e, dragEl, dropEl, pos) {\r\n         // your code here\r\n         return true;\r\n      }\r\n    });\r\n\r\n## Events\r\n\r\n###drag\r\n\r\nIt's possible to bind to three different events `draggable:start`, `draggable:drag` and `draggable:stop` emitted by draggable.\r\n\r\n    dragEl.on('draggable:start', function () {\r\n      // your code goes here\r\n    });\r\n\r\n\r\n###drop\r\n\r\nDroppable emits one event `droppable:drop` when element is successfully dropped.\r\n\r\n## Options\r\n\r\n###drag\r\n\r\n####selector (class name)\r\n\r\nDelegates to elements defined by selector instead of the main object.\r\nThis is useful if you have a lot of draggable elements. Instead of binding to each element you can \r\nsetup draggable to their parent and delegate to dragging elements by providing selector.\r\n\r\n####context\r\n\r\nChanges context in which callbacks will be executed.\r\n\r\n####revert\r\n\r\nWhen set to `true` draggable element goes back to its starting position in case when drop fails.\r\n\r\n###drop\r\n\r\n####context\r\n\r\nChanges context in which callbacks will be executed.\r\n","name":"zepto.dragdrop.js","tagline":"Drag & Drop for Zepto with touch and mouse events."}